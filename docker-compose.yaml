services:

  redis:
    container_name: redis
    image: redis:latest
    healthcheck:
      test: [ "CMD", "redis-cli", "ping" ]
      interval: 10s
      timeout: 5s
      retries: 5

  postgres:
    container_name: postgres
    image: postgres:latest
    environment:
      POSTGRES_USER: user
      POSTGRES_PASSWORD: passw53
      POSTGRES_DB: db53
      PGPORT: 5432
      POSTGRES_HOST: postgres
#    ports:
#      - "5435:5432"
    volumes:
      - ./pg_data:/var/lib/postgresql/data
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U user -d db53" ]
      interval: 5s
      timeout: 5s
      retries: 5

  grpc:
    container_name: grpc
    build:
      context: ./grpc_app
        # ports:
        # - "8000:80"
    volumes:
      - ./shared:/app/shared  # Монтируем локальную папку shared в контейнер

  fastapi:
    container_name: fastapi
    build:
      context: ./fastapi_app
#      ЗАПУСТИТЬ ЮНИКОРНОМ ОТСЮДА
      # ports:
      # - "8000:80"
    volumes:
      - ./shared:/app/shared  # Монтируем локальную папку shared в контейнер
      - ./shared:/app/db/shared  # Монтируем локальную папку shared в контейнер
    environment:
      POSTGRES_USER: user
      POSTGRES_PASSWORD: passw53
      POSTGRES_DB: db53
      PGPORT: 5432
      POSTGRES_HOST: postgres

    depends_on:
      grpc:
        condition: service_started
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy

  bot:
    build:
      context: ./bot_app
    container_name: bot
    env_file:
      - .env
    environment:
      WS_URL: ws://fastapi:8000/ws
      GRPC_CONNECTION_STRING: grpc:50051
    volumes:
      - ./shared:/app/shared  # Монтируем локальную папку shared в контейнер
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
      grpc:
        condition: service_started
      fastapi:
        condition: service_started

  nginx:
    image: nginx:latest
    container_name: nginx
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx/default.conf:/etc/nginx/conf.d/default.conf
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
      grpc:
        condition: service_started
      fastapi:
        condition: service_started
      bot:
        condition: service_started





