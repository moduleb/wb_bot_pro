services:

  redis:
    container_name: redis
    image: redis:latest
    ports:
      - "6379:6379"
    healthcheck:
      test: [ "CMD", "redis-cli", "ping" ]
      interval: 10s
      timeout: 5s
      retries: 5

  postgres:
    container_name: postgres
    image: postgres:latest
    env_file:
      - .env
    ports:
      - "5432:5432"
    volumes:
      - ./pg_data:/var/lib/postgresql/data
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U user -d db53" ]
      interval: 5s
      timeout: 5s
      retries: 5

  grpc_app:
    container_name: grpc
    build:
      context: ./grpc_app
    env_file:
      - .env
    volumes:
      - ./shared:/app/shared

  celery_app:
    container_name: celery
    build:
      context: ./celery_app
    env_file:
      - .env
    volumes:
      - ./shared:/app/shared
    depends_on:
      postgres:
        condition: service_healthy
      grpc_app:
        condition: service_started

  fastapi:
    container_name: fastapi
    build:
      context: ./fastapi_app
    env_file:
      - .env
    ports:
     - "8000:80"
    volumes:
      - ./shared:/app/shared
      - ./shared:/app/db/shared
    command: uvicorn run:app --host 0.0.0.0 --port 8000
    depends_on:
      postgres:
        condition: service_healthy
      grpc_app:
        condition: service_started

  bot:
    container_name: bot
    build:
      context: ./bot_app
    env_file:
      - .env
    volumes:
      - ./shared:/app/shared
    depends_on:
      redis:
        condition: service_healthy
      fastapi:
        condition: service_started

#  nginx:
#    container_name: nginx
#    image: nginx:latest
#    ports:
#      - "80:80"
#      - "443:443"
#    volumes:
#      - ./nginx/default.conf:/etc/nginx/conf.d/default.conf
#      - ./django_app/staticfiles:/django/staticfiles
#      - ./django_app/mediafiles:/django/mediafiles
#    depends_on:
#      fastapi:
#        condition: service_started
#      bot:
#        condition: service_started
#      django:
#        condition: service_started

#  django:
#    container_name: django
#    build:
#      context: ./django_app
#    env_file:
#      - .env
#    command: gunicorn django_app.wsgi:application --bind 0.0.0.0:8000
#    depends_on:
#      postgres:
#        condition: service_healthy